{"version":3,"sources":["components/InputTodo.jsx","components/EditModal.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","App.jsx","index.js"],"names":["InputTodo","props","todoText","onChange","onClick","className","placeholder","value","EditModal","setShowEditModal","setValue","todos","editIndex","setIncompleteTodos","useState","errorText","setErrorText","Wrapper","Box","style","color","fontSize","textAlign","ChangeName","type","event","target","newIncompleteTodos","styled","div","IncompleteTodos","onClickCompleteTodo","onClickDeleteTodo","onClickEditTodo","showEditModal","editValue","setEditValue","map","todo","index","CompleteTodos","onClickBackTodo","checked","App","setTodotext","incompleteTodos","completeTodos","setCompleteTodos","setEditIndex","targetArray","newArray","splice","newCompleteTodos","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.456d72aa.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const InputTodo = (props) => {\n  const { todoText, onChange, onClick } = props;\n\n  return (\n    <header className=\"input-area\">\n      <input placeholder=\"ToDoを入力\" value={todoText} onChange={onChange} />\n      <button onClick={onClick}>追加</button>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport styled from \"styled-components\";\n\nexport const EditModal = (props) => {\n  const {\n    setShowEditModal,\n    value,\n    setValue,\n    todos,\n    editIndex,\n    setIncompleteTodos,\n  } = props;\n\n  const [errorText, setErrorText] = useState(false);\n\n  const onChangeEditValue = (event) => setValue(event.target.value);\n\n  const editIncompleteTodos = () => {\n    if (value !== \"\") {\n      const newIncompleteTodos = [...todos];\n      newIncompleteTodos[editIndex] = value;\n      setIncompleteTodos(newIncompleteTodos);\n      setShowEditModal(false);\n    } else {\n      setErrorText(true);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Box>\n        {errorText && (\n          <p\n            style={{ color: \"#fa6247\", fontSize: \"14px\", textAlign: \"center\" }}\n          >\n            名前を入力してください\n          </p>\n        )}\n        <ChangeName>\n          <input type=\"text\" value={value} onChange={onChangeEditValue} />\n          <button onClick={editIncompleteTodos}>決定</button>\n        </ChangeName>\n        <button\n          onClick={() => {\n            setShowEditModal(false);\n          }}\n        >\n          キャンセル\n        </button>\n      </Box>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.8);\n`;\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 40px;\n  background-color: #ffffff;\n`;\n\nconst ChangeName = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import React from \"react\";\nimport { EditModal } from \"./EditModal\";\n\nexport const IncompleteTodos = (props) => {\n  const {\n    todos,\n    onClickCompleteTodo,\n    onClickDeleteTodo,\n    onClickEditTodo,\n    showEditModal,\n    editValue,\n    setEditValue,\n    setShowEditModal,\n    editIndex,\n    setIncompleteTodos,\n  } = props;\n\n  return (\n    <div className=\"incomplete-area\">\n      <p>やること</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <li key={todo}>\n              <input\n                type=\"checkbox\"\n                onClick={() => onClickCompleteTodo(index)}\n              />\n              <p>{todo}</p>\n              <button onClick={() => onClickEditTodo(index)}>編集</button>\n              <button onClick={() => onClickDeleteTodo(index, todos)}>\n                削除\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      {showEditModal && (\n        <EditModal\n          setShowEditModal={setShowEditModal}\n          value={editValue}\n          setValue={setEditValue}\n          todos={todos}\n          editIndex={editIndex}\n          setIncompleteTodos={setIncompleteTodos}\n        />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const CompleteTodos = (props) => {\n  const { todos, onClickBackTodo } = props;\n  return (\n    <div className=\"complete-area\">\n      <p>完了</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <li key={todo}>\n              <input\n                type=\"checkbox\"\n                onClick={() => onClickBackTodo(index)}\n                checked\n              />\n              <p>{todo}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","/* eslint react-hooks/exhaustive-deps: off */\n\nimport React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport \"./styles/styles.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport { CompleteTodos } from \"./components/CompleteTodos\";\n\nexport const App = () => {\n  const [todoText, setTodotext] = useState(\"\");\n\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n\n  const [completeTodos, setCompleteTodos] = useState([]);\n\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  const [editValue, setEditValue] = useState(\"\");\n\n  const [editIndex, setEditIndex] = useState(0);\n\n  const onChangeTodoText = (event) => setTodotext(event.target.value);\n\n  const onClickAddTodo = () => {\n    if (todoText === \"\") return;\n    const newIncompleteTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newIncompleteTodos);\n    setTodotext(\"\");\n  };\n\n  const onClickDeleteTodo = (index, targetArray) => {\n    const newArray = [...targetArray];\n    newArray.splice(index, 1);\n    if (targetArray === incompleteTodos) {\n      setIncompleteTodos(newArray);\n    } else if (targetArray === completeTodos) {\n      setCompleteTodos(newArray);\n    }\n  };\n\n  const onClickCompleteTodo = (index) => {\n    onClickDeleteTodo(index, incompleteTodos);\n\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  const onClickBackTodo = (index) => {\n    onClickDeleteTodo(index, completeTodos);\n\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n  };\n\n  const onClickEditTodo = (index) => {\n    setShowEditModal(true);\n    setEditValue(incompleteTodos[index]);\n    setEditIndex(index);\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAddTodo}\n      />\n      <main>\n        <IncompleteTodos\n          todos={incompleteTodos}\n          onClickCompleteTodo={onClickCompleteTodo}\n          onClickDeleteTodo={onClickDeleteTodo}\n          onClickEditTodo={onClickEditTodo}\n          editValue={editValue}\n          setEditValue={setEditValue}\n          showEditModal={showEditModal}\n          setShowEditModal={setShowEditModal}\n          todoText={todoText}\n          setTodotext={setTodotext}\n          editIndex={editIndex}\n          setIncompleteTodos={setIncompleteTodos}\n        />\n        <CompleteTodos\n          todos={completeTodos}\n          onClickBackTodo={onClickBackTodo}\n        />\n      </main>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}